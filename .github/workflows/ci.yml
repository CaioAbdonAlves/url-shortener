name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: url_shortener_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        cp config.example.env .env.test
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/url_shortener_test?schema=public" >> .env.test
        echo "JWT_SECRET=test-secret-key" >> .env.test
        echo "JWT_EXPIRES_IN=1h" >> .env.test
        echo "NODE_ENV=test" >> .env.test

    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/url_shortener_test?schema=public

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run build

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/url_shortener_test?schema=public
        JWT_SECRET: test-secret-key
        JWT_EXPIRES_IN: 1h
        NODE_ENV: test

    - name: Run test coverage
      run: npm run test:cov
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/url_shortener_test?schema=public
        JWT_SECRET: test-secret-key
        JWT_EXPIRES_IN: 1h
        NODE_ENV: test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Run dependency check
      run: npm audit fix --dry-run

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create Docker image
      run: docker build -t url-shortener:${{ github.sha }} .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: ./ 